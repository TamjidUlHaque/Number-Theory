#include <stdio.h>

int primes[1000000]; // Adjust size as needed
bool isPrime[1000001]; // Up to 1e6
int primeCount = 0;

void generatePrimes(int n) {
    for (int i = 0; i <= n; ++i)
        isPrime[i] = true;

    isPrime[0] = isPrime[1] = false;

    for (int i = 2; i * i <= n; ++i) {
        if (isPrime[i]) {
            for (int j = i * i; j <= n; j += i)
                isPrime[j] = false;
        }
    }

    for (int i = 2; i <= n; ++i) {
        if (isPrime[i])
            primes[primeCount++] = i;
    }
}

int main() {
    int limit = 1000000;
    generatePrimes(limit);
    printf("Number of primes up to %d: %d\n", limit, primeCount);
    return 0;
}

_____________________________________ALGOBOT048B_____________________________________________________

bool mark[N+5];
vector<ll>primes;
void sieve(){
    memset(mark,true,sizeof(mark));
    mark[0]=0,mark[1]=0,mark[2]=1;
    for(ll i=4;i<=N;i+=2LL){
        mark[i]=0;
    }
    for(ll i=3;i*i<=N;i+=2LL){
        if(mark[i]){
            for(ll j=i*i;j<=N;j+=i){
                mark[j]=0;
            }
        }
    }primes.push_back(2);
    for(int i=3;i<=N;i+=2){
        if(mark[i]){
            primes.push_back(i);
        }
    }
}
